{"version":3,"sources":["../../routes/test.js"],"names":["express","require","router","Router","LanguagesModel","get","req","res","next","render","objToResponse","obgError","status","description","imageUrl","query","id","findOne","lean","exec","err","lang","__handleError","json","name","RegExp","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,SAASF,QAAQG,MAAR,EAAf;AACA,IAAIC,iBAAiBH,QAAQ,QAAR,EAAkBG,cAAvC;;AAEAF,OAAOG,GAAP,CAAW,GAAX,EAAgB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACtCD,QAAIE,MAAJ,CAAW,MAAX;AACH,CAFD;;AAIAP,OAAOG,GAAP,CAAW,QAAX,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC3C,QAAIE,sBAAJ;AACA,QAAIC,WAAW;AACXC,gBAAQ,OADG;AAEXC,qBAAa,cAFF;AAGXC,kBAAU;AAHC,KAAf;;AAMA,QAAIR,IAAIS,KAAJ,CAAUC,EAAd,EAAkB;AACdZ,uBAAea,OAAf,CAAuB,EAACD,IAAIV,IAAIS,KAAJ,CAAUC,EAAf,EAAvB,EACKE,IADL,GACYC,IADZ,CACiB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAClC,gBAAID,GAAJ,EAASE,cAAcF,GAAd;AACTV,4BAAgB,CAACW,IAAD,GAAQV,QAAR,GAAmB,EAACC,QAAQ,IAAT,EAAeS,UAAf,EAAnC;AACA,mBAAOd,IAAIgB,IAAJ,CAASb,aAAT,CAAP;AACH,SALD;AAMH,KAPD,MAOO;AACHN,uBAAea,OAAf,CAAuB,EAACO,MAAM,IAAIC,MAAJ,CAAW,MAAMnB,IAAIS,KAAJ,CAAUS,IAAhB,GAAuB,GAAlC,EAAuC,GAAvC,CAAP,EAAvB,EACKN,IADL,GACYC,IADZ,CACiB,UAAUC,GAAV,EAAeC,IAAf,EAAqB;AAClC,gBAAID,GAAJ,EAASE,cAAcF,GAAd;AACTV,4BAAgB,CAACW,IAAD,GAAQV,QAAR,GAAmB,EAACC,QAAQ,IAAT,EAAeS,UAAf,EAAnC;AACA,mBAAOd,IAAIgB,IAAJ,CAASb,aAAT,CAAP;AACH,SALD;AAMH;AACJ,CAvBD;;AAyBAgB,OAAOC,OAAP,GAAiBzB,MAAjB","file":"test.js","sourcesContent":["'use strict';\nconst express = require('express');\nconst router = express.Router();\nlet LanguagesModel = require('lib/db').LanguagesModel;\n\nrouter.get('/', function (req, res, next) {\n    res.render('test');\n});\n\nrouter.get('/query', function (req, res, next) {\n    let objToResponse;\n    let obgError = {\n        status: 'error',\n        description: 'Error input!',\n        imageUrl: 'images/error.svg'\n    };\n\n    if (req.query.id) {\n        LanguagesModel.findOne({id: req.query.id})\n            .lean().exec(function (err, lang) {\n            if (err) __handleError(err);\n            objToResponse = !lang ? obgError : {status: 'ok', lang};\n            return res.json(objToResponse);\n        });\n    } else {\n        LanguagesModel.findOne({name: new RegExp('^' + req.query.name + '$', 'i')})\n            .lean().exec(function (err, lang) {\n            if (err) __handleError(err);\n            objToResponse = !lang ? obgError : {status: 'ok', lang};\n            return res.json(objToResponse);\n        });\n    }\n});\n\nmodule.exports = router;"]}